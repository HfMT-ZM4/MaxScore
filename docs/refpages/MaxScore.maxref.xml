<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>
<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="MaxScore">
	<digest>
		MaxScore – music notation in Max.
	</digest>
	<description>
		<o>
			MaxScore
		</o>
		provides the computer music composer with standard and graphical music notation directly in the Max environment. 
		<o>
			MaxScore
		</o>
		is a wrapper around a Max Java (mxj) object which accepts messages that can create a score, populate it with notes, perform it, and export to popular formats for professional publishable results. MaxScore currently supports export via MusicXML for input into Finale, Sibelius, Dorico, MuseScore and many other programs as well as LilyPond format. <br /> <br />MaxScore is more than a notation tool, it is an interactive performance object. MaxScore can play back a score and drive your MSP patches through a well-defined instrument interface. Scores can be created and modified in real-time. You can add notes explicitly by defining their properties (specifying a quarter note triplet as duration and middle C as pitch), or generate an arbitrary stream of musical events and use MaxScore’s transcriber to notate them automatically. <br />
	</description>
<!--METADATA-->
<!--OUTLETS-->
<!--ARGUMENTS-->
<!--MESSAGES-->
	<methodlist>
		<method name="GlissandoTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle glissando out for selected notes 
			</description>
		</method>
		<method name="addBinaryBeatDivisionScheme">
			<arglist>
				<arg id="0" name="timeSpan" type="int" optional="0" /> <arg id="1" name="numDivisions" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				You can customize the beat divisions that the transcriber uses. You must add at least one binary beat division scheme to the transcriber 
				<p>
					Example: addBinaryBeatDivisionScheme 1 4 
				</p>
			</description>
		</method>
		<method name="addGraceNote">
			<arglist>
				<arg id="0" name="duration" type="float" optional="0" /> <arg id="1" name="pitch" type="float" optional="0" /> <arg id="2" name="amplitude" type="float" optional="1" /> <arg id="3" name="hold" type="float" optional="1" /> <arg id="4" name="accPrefSharp" type="boolean" optional="1" /> <arg id="5" name="beamedOut" type="boolean" optional="1" /> <arg id="6" name="slurredOut" type="boolean" optional="1" /> <arg id="7" name="tiedOut" type="boolean" optional="1" /> <arg id="8" name="slashed" type="boolean" optional="1" /> <arg id="9" name="mark-index" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Adds a note to a score. Duration and pitch are mandatory arguments, the following ones are optional. 
				<p>
					Example: addGraceNote 1. 63. 0.5 1. true true true true true 2 
				</p>
			</description>
		</method>
		<method name="addInterval">
			<arglist>
				<arg id="0" name="pitch" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				adds an interval to a note 
				<p>
					Example: addInterval 84.5 
				</p>
			</description>
		</method>
		<method name="addIntervalToSelection">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="interval" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				adds an interval to a selection 
				<p>
					Example: addIntervalToSelection 1 0 0 1 3 
				</p>
			</description>
		</method>
		<method name="addMeasure">
			<arglist>
				<arg id="0" name="timesig_numerator" type="int" optional="0" /> <arg id="1" name="timesig_denominator" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				adds a measure to a score with key signature specified 
				<p>
					Example: addMeasure 5 8 
				</p>
			</description>
		</method>
		<method name="addNewMaxScoreInstrumentToOrchestra">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				adds new instrument as the last instrument in the orchestra. Its index will be orchestra size - 1 
			</description>
		</method>
		<method name="addNote">
			<arglist>
				<arg id="0" name="duration" type="float" optional="0" /> <arg id="1" name="pitch" type="float" optional="0" /> <arg id="2" name="amplitude" type="float" optional="0" /> <arg id="3" name="hold" type="float" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				add a note to a staff 
				<p>
					Example: addNote 1. 60. 0.5 0.8 
				</p>
			</description>
		</method>
		<method name="addNoteToSelection">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				adds a note to a selection 
				<p>
					Example: addNoteToSelection 1 0 0 1 
				</p>
			</description>
		</method>
		<method name="addRenderedMessageToMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="xOffset" type="int" optional="0" /> <arg id="2" name="yOffset" type="int" optional="0" /> <arg id="3" name="renderedMessage" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads. 
				<p>
					Example: addRenderedMessageToMeasure 0 0 0 "linesegment 0 0 400 400" 
				</p>
			</description>
		</method>
		<method name="addRenderedMessageToNote">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="xOffset" type="int" optional="0" /> <arg id="5" name="yOffset" type="int" optional="0" /> <arg id="6" name="renderedMessage" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads. 
				<p>
					Example: addRenderedMessageToNote 0 0 0 0 0 0 "linesegment 0 0 400 400" 
				</p>
			</description>
		</method>
		<method name="addRenderedMessageToSelectedNotes">
			<arglist>
				<arg id="0" name="xOffset" type="int" optional="0" /> <arg id="1" name="yOffset" type="int" optional="0" /> <arg id="2" name="renderedMessage" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads. 
				<p>
					Example: addRenderedMessageToSelectedNotes 0 0 "write that's funny" 
				</p>
			</description>
		</method>
		<method name="addRenderedMessageToStaff">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="xOffset" type="int" optional="0" /> <arg id="3" name="yOffset" type="int" optional="0" /> <arg id="4" name="renderedMessage" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads. 
				<p>
					Example: addRenderedMessageToStaff 0 0 0 0 "linesegment 0 20 400 400" 
				</p>
			</description>
		</method>
		<method name="addTupletBeatDivisionScheme">
			<arglist>
				<arg id="0" name="timeSpan" type="int" optional="0" /> <arg id="1" name="numDivisions" type="int" optional="0" /> <arg id="2" name="minRequired" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				You can customize the beat divisions that the transcriber uses. You must add at least one binary beat division scheme to the transcriber 
				<p>
					Example: addTupletBeatDivisionScheme 1 3 2 
				</p>
			</description>
		</method>
		<method name="autoBeamTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Autobeams selected notes. Observes beat boundaries. 
			</description>
		</method>
		<method name="beamTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Autobeams selected notes. Doesn't observe beat boundaries. 
			</description>
		</method>
		<method name="beatDivisionSchemeListDefaultSetup">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				You can customize the beat divisions that the transcriber uses with messages such as these. Read the java docs to understand this better!!! 
			</description>
		</method>
		<method name="capture">
			<arglist>
				<arg id="0" name="timeStamp" type="float" optional="1" /> <arg id="1" name="voiceIndex" type="int" optional="0" /> <arg id="2" name="pitch" type="float" optional="0" /> <arg id="3" name="amplitude" type="float" optional="0" /> <arg id="4" name="hold" type="float" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					capture
				</m>
				a note for transcription. Realtime transcriber uses voiceIndex pitch amplitude. Non-realtime transcription also accepts an optional hold time 
				<p>
					Example: capture 0. 0 60. 0.5 1. 
				</p>
			</description>
		</method>
		<method name="clearBeatDivisionSchemeList">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Clears stored beat division scheme list 
			</description>
		</method>
		<method name="clearSelection">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				clears current selection 
			</description>
		</method>
		<method name="clearUndoCache">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				deletes ALL files in the undo cache 
			</description>
		</method>
		<method name="clearUndoStack">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				empties Undo Stack and invokes Java garbage collection 
			</description>
		</method>
		<method name="copy">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				copies selected note(s). Shortcut: c 
			</description>
		</method>
		<method name="copyToAux1">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				copies selected note(s) to aux buffer 1 
			</description>
		</method>
		<method name="copyToAux2">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				copies selected note(s) to aux buffer 2 
			</description>
		</method>
		<method name="crescTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles crescendo for selected notes 
			</description>
		</method>
		<method name="cut">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					cut
				</m>
				selected note(s). Shortcut: x 
			</description>
		</method>
		<method name="decrescTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles decrescendo for selected notes 
			</description>
		</method>
		<method name="delete">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				deletes selected note(s). Shortcut: del 
			</description>
		</method>
		<method name="deleteMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				deletes selected measure or measure specified by optional argument 
				<p>
					Example: deleteMeasure 5 
				</p>
			</description>
		</method>
		<method name="deleteStaff">
			<arglist>
				<arg id="0" name="staff" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				deletes selected staff or staff specified by optional argument 
				<p>
					Example: deleteStaff 2 
				</p>
			</description>
		</method>
		<method name="drawAllMeasureNumbers">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				draw a measure number on each measure if true, else only on first measure of each line. 
				<p>
					Example: drawAllMeasureNumbers true 
				</p>
			</description>
		</method>
		<method name="dumpInstrumentInfo">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Dumps instrument info out of the second outlet. Attributes are name, orchestra index, music device, mixer, name class and note dimensions; framed by startdump/enddump getInstrumentInfo 
				<p>
					Example: dumpInstrumentInfo 2 
				</p>
			</description>
		</method>
		<method name="dumpOrchestra">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Dumps instrument info for entire orchestra out of the second outlet. Attributes are name, orchestra index, music device, mixer, name class and note dimensions; framed by startdump/enddump getInstrumentInfo 
			</description>
		</method>
		<method name="dumpScore">
			<arglist>
				<arg id="0" name="startMeasure" type="int" optional="1" /> <arg id="1" name="numMeasures" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps entire score or, optionally, measure range given by start measure and number of measure in XML format out of the second outlet 
				<p>
					Example: dumpScore 2 1 
				</p>
			</description>
		</method>
		<method name="dumpScoreAttributes">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps score attributes in XML format out of the second outlet 
			</description>
		</method>
		<method name="dumpUndoStackSizesMB">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				sends a list of undo stack mem info (unit is MB). First element is total mb stored in stack, followed by size of each snapshot 
			</description>
		</method>
		<method name="durationTransform">
			<arglist>
				<arg id="0" name="noteDuration" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				changes note duration for selected note(s). Valid note durations are: WHOLE, HALF, QUARTER, EIGHTH, SIXTEENTH, THIRTYSECOND, SIXTYFOURTH, ONEHUNDREDTWENTYEIGHTH, TWOHUNDREDFIFTYSIXTH 
				<p>
					Example: durationTransform WHOLE 
				</p>
			</description>
		</method>
		<method name="execBinaryCopyBufferTransform">
			<arglist>
				<arg id="0" name="pluginName" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				executes a JMSL plugin 
				<p>
					Example: execBinaryCopyBufferTransform com.softsynth.jmsl.score.transforms.ZipperTransform. Refer to help file for further information 
				</p>
			</description>
		</method>
		<method name="execNotePropertiesTransform">
			<arglist>
				<arg id="0" name="pluginName" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				executes a JMSL plugin 
				<p>
					Example: execNotePropertiesTransform com.softsynth.jmsl.score.transforms.SlurTransform. Refer to help file for further information 
				</p>
			</description>
		</method>
		<method name="execScoreOperator">
			<arglist>
				<arg id="0" name="pluginName" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				executes a JMSL plugin 
				<p>
					Example: execBinaryCopyBufferTransform com.softsynth.jmsl.score.operators.PlaySelectedCluster. Refer to help file for further information 
				</p>
			</description>
		</method>
		<method name="execUnaryCopyBufferTransform">
			<arglist>
				<arg id="0" name="pluginName" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				executes a JMSL plugin 
				<p>
					Example: execBinaryCopyBufferTransform com.softsynth.jmsl.score.transforms.ScrambleTransform. Refer to help file for further information 
				</p>
			</description>
		</method>
		<method name="extendHoldTimeOfLastNote">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				If set to true, the transcriber will automatically set the duration of last note to its hold time. 
				<p>
					Example: extendHoldTimeOfLastNote true 
				</p>
			</description>
		</method>
		<method name="freeflowPaste">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				like paste but ignores original staff and measure boundaries of pasted notes 
			</description>
		</method>
		<method name="getCopyright">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns copyright info 
			</description>
		</method>
		<method name="getCurrentLocation">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns measure and staff numbers for current measure 
			</description>
		</method>
		<method name="getDrawingAnchor">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the coordinates for measure, measure/staff or note elements. 
				<m>
					getDrawingAnchor
				</m>
				uses up to 4 arguments: one for measure index, two for measure and staff indexes, and four for measure, staff, track and note indexes. 
				<p>
					Example: getDrawingAnchor 1 0 1 2 
				</p>
			</description>
		</method>
		<method name="getDurationalSpacingBase">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the "duration spacing base" of the Haken/Blostein algorithm which determines the influence of a note's duration on proportional spacing/justification. 
			</description>
		</method>
		<method name="getInstalledMusicFonts">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the names of the supported music fonts (Aloisen New, Jazz, Maestro, Opus) installed on the OS. 
			</description>
		</method>
		<method name="getInstrumentName">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				get name for the instrument with the given index 
				<p>
					Example: getInstrumentName 1 
				</p>
			</description>
		</method>
		<method name="getInstrumentTransposition">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns transposition for the given instrument index 
				<p>
					Example: getInstrumentTransposition 1 
				</p>
			</description>
		</method>
		<method name="getIntervalInfo">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="interval" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps the attributes for the specified interval out of the second outlet in XML format 
				<p>
					Example: getIntervalInfo 0 0 0 7 0 
				</p>
			</description>
		</method>
		<method name="getJMSLAdvanceTime">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns advance time. Advance time is typically 0.1 sec. A little jitter-absorbing buffer. 
			</description>
		</method>
		<method name="getJMSLLicenseType">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the JMSL license type. Currently, there are two types: LIVE and JMSL. 
			</description>
		</method>
		<method name="getJMSLNow">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns clocktime and advance time. 
			</description>
		</method>
		<method name="getJMSLRealTime">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns current JMSL clock time. 
			</description>
		</method>
		<method name="getJavaFreeMemMB">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns current free memory available to Java virtual machine. Initial and maximum heap sizes can be set in max.java.config.txt located in ./Cycling '74/java or /Max.app/Contents/Resources/C74/java-classes 
			</description>
		</method>
		<method name="getLeftMargin">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the left margin for the specified measure 
				<p>
					Example: getLeftMargin 0 
				</p>
			</description>
		</method>
		<method name="getMeasureInfo">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps measure info for given measure in XML format out of the second outlet 
				<p>
					Example: getMeasureInfo 0 
				</p>
			</description>
		</method>
		<method name="getMeasureWidth">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the width for the specified measure 
				<p>
					Example: getMeasureWidth 0 
				</p>
			</description>
		</method>
		<method name="getNoteAnchor">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns for the selected note(s) the x and y coordinates on the canvas, as well as measure, staff, track, note and interval indexes. Interval index = -1 for notes 
			</description>
		</method>
		<method name="getNoteAreaWidth">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the note area (width minus left area) for the specified measure 
				<p>
					Example: getNoteAreaWidth 0 
				</p>
			</description>
		</method>
		<method name="getNoteInfo">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps the attributes for the specified note out of the second outlet in XML format 
				<p>
					Example: getNoteInfo 0 0 0 7 
				</p>
			</description>
		</method>
		<method name="getNoteLevel">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the note level relative to the five staff lines. Bottom line = 124 
			</description>
		</method>
		<method name="getNotePosition">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns measure, staff, track, and note index for selected note(s) or interval(s) 
			</description>
		</method>
		<method name="getNoteProperty">
			<arglist>
				<arg id="0" name="property" type="symbol" optional="0" /> <arg id="1" name="measure" type="int" optional="0" /> <arg id="2" name="staff" type="int" optional="0" /> <arg id="3" name="track" type="int" optional="0" /> <arg id="4" name="note" type="int" optional="0" /> <arg id="5" name="interval" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Lets you note for property without selecting it. Interval index -1 if just root or single note. Currently only 'level' property is supported. 
				<p>
					Example: getNoteProperty level 0 0 0 0 -1 
				</p>
			</description>
		</method>
		<method name="getNumInstruments">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of instruments in an orchestra 
			</description>
		</method>
		<method name="getNumIntervals">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of intervals attached to the note specified 
				<p>
					Example: getNumIntervals 0 2 0 0 
				</p>
			</description>
		</method>
		<method name="getNumMeasures">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of measures in a score 
			</description>
		</method>
		<method name="getNumNotes">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of notes for a given measure-staff-track combo 
				<p>
					Example: getNumNotes 0 0 1 
				</p>
			</description>
		</method>
		<method name="getNumStaves">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of staves in a score 
			</description>
		</method>
		<method name="getNumTracks">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the number of tracks in a score 
			</description>
		</method>
		<method name="getOrchestraSize">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns number of instruments. Same as getNumInstruments 
			</description>
		</method>
		<method name="getRenderDelay">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the time in seconds by which score rendering is delayed. Default = 0. 
			</description>
		</method>
		<method name="getScoreAnnotation">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns annotation string 
			</description>
		</method>
		<method name="getScoreBottomMargin">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns bottom score margin in pixels 
			</description>
		</method>
		<method name="getScoreFirstSystemIndent">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns first system indent in pixels 
			</description>
		</method>
		<method name="getScoreLeftMargin">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns left score margin in pixels 
			</description>
		</method>
		<method name="getScoreRightMargin">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns right score margin in pixels 
			</description>
		</method>
		<method name="getScoreTopMargin">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns top score margin in pixels 
			</description>
		</method>
		<method name="getScoreTopMarginOfFirstPage">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns top score margin in pixels when 1st measure is 0 
			</description>
		</method>
		<method name="getSelectedLocation">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns measure and staff numbers for selected measure 
			</description>
		</method>
		<method name="getSelectedNoteInfo">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps the attributes for the selected note(s) and interval(s) out of the second outlet in XML format 
			</description>
		</method>
		<method name="getStaffInfo">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				dumps staff info for given measure/staff in XML format out of the second outlet 
				<p>
					Example: getStaffInfo 0 0 
				</p>
			</description>
		</method>
		<method name="getStaffSpacing">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns space above and below a specified staff 
				<p>
					Example: getStaffSpacing 0 
				</p>
			</description>
		</method>
		<method name="getSubtitle">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns sub title 
			</description>
		</method>
		<method name="getTimeSignature">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the time signature for the specified measure 
				<p>
					Example: getTimeSignature 45 
				</p>
			</description>
		</method>
		<method name="getTitle">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns title 
			</description>
		</method>
		<method name="getUndoStackMemoryThresholdMB">
			<arglist>
				<arg id="0" name="undo-stack-memory-threshold" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns the current threshold in MB 
			</description>
		</method>
		<method name="getZoom">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns current zoom level 
			</description>
		</method>
		<method name="handleMusicCurveRendering">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles curve handling by canvas on/off. Curves (ties, slurs), lines (wedges, barlines, staff lines and ledger lines) and dots can either by handled by the 
				<o>
					MaxScore 
				</o>
				object or by canvas. The latter allows more control over positioning and shape. 
				<p>
					Example: handleMusicCurveRendering true 
				</p>
			</description>
		</method>
		<method name="highlightSelectedStaff">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles highlighting for selected staff on/off 
				<p>
					Example: highlightSelectedStaff true 
				</p>
			</description>
		</method>
		<method name="insertMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				insert a measure before selected measure or measure specified by optional argument 
				<p>
					Example: insertMeasure 5 
				</p>
			</description>
		</method>
		<method name="insertNote">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="duration" type="int" optional="0" /> <arg id="5" name="pitch" type="int" optional="0" /> <arg id="6" name="amplitude" type="int" optional="0" /> <arg id="7" name="hold" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				insert a note at given position 
				<p>
					Example: insertNote 0 0 0 0 0.5 0. 70. 0. 
				</p>
			</description>
		</method>
		<method name="insertStaff">
			<arglist>
				<arg id="0" name="staff" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				insert a staff before selected staff or staff specified by optional argument 
				<p>
					Example: insertStaff 3 
				</p>
			</description>
		</method>
		<method name="isChord">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				returns whether the specified note has intervals and its number of intervals 
				<p>
					Example: isChord 0 0 0 7 
				</p>
			</description>
		</method>
		<method name="loadScore">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> <arg id="1" name="flag" type="boolean" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				load a score. The optional second argument specifies whether the score will be drawn right away or only after a "setRenderAllowed true" message 
				<p>
					Example: loadScore /Users/hajdu/Desktop/untitled.xml false 
				</p>
			</description>
		</method>
		<method name="lyricLevelTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				sets y coordinates of the text attached to selected note(s) to 60 - "lyric level" 
			</description>
		</method>
		<method name="newScore">
			<arglist>
				<arg id="0" name="numStaves" type="int" optional="0" /> <arg id="1" name="width" type="int" optional="0" /> <arg id="2" name="height" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				create new score with specified width and height values. If 3 arguments: number of staves, width and height, if 4 arguments and 4th arg != int: number of staves, width, height, and isRenderAllowed flag, if 4 arguments and 4th arg = int: number of staves, number of tracks, width and height, if 5 arguments: number of staves, number of tracks, width height and isRenderAllowed flag, if 6 arguments: number of staves, number of tracks, width height, isRenderAllowed flag and isUndoStackEnabled flag 
				<p>
					Example: newScore 2 320 240 or newScore 1 4 400 480 true true 
				</p>
			</description>
		</method>
		<method name="nextPage">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				draws next page 
			</description>
		</method>
		<method name="noteStemVisibilityTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles stem visibility off/on 
			</description>
		</method>
		<method name="noteheadTransform">
			<arglist>
				<arg id="0" name="noteheadType" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				choose a notehead type for selected note(s). Valid notehead types are: NOTEHEAD_STANDARD, NOTEHEAD_X, NOTEHEAD_DIAMOND, NOTEHEAD_TRIANGLE, NOTEHEAD_INVERTED_TRIANGLE, NOTEHEAD_X_DIAMOND, NOTEHEAD_SLASH 
				<p>
					Example: noteheadTransform NOTEHEAD_STANDARD 
				</p>
			</description>
		</method>
		<method name="noteheadVisibilityTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles notehead visibility on/off 
			</description>
		</method>
		<method name="notifySelectionBuffer">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				If set to true, 
				<m>
					notifySelectionBuffer
				</m>
				will automatically return selected location and note position whenever user selects notes. 
				<p>
					Example: notifySelectionBuffer true 
				</p>
			</description>
		</method>
		<method name="openWindow">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				opens canvas window 
			</description>
		</method>
		<method name="ottavaAltaTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle ottava alta for selected notes 
			</description>
		</method>
		<method name="ottavaBassaTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle ottava bassa for selected notes 
			</description>
		</method>
		<method name="overrideStemDirection">
			<arglist>
				<arg id="0" name="direction" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				lets user override layout manager's opinion of stem direction of notes in selection buffer. Possible values are UP, DOWN and CLEAR. CLEAR returns control to layout manager 
				<p>
					Example: overrideStemDirection DOWN 
				</p>
			</description>
		</method>
		<method name="paste">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					paste
				</m>
				note(s) at selected position. Shortcut: v 
			</description>
		</method>
		<method name="playSection">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				play section specified by setSection 
			</description>
		</method>
		<method name="previousPage">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				draw previous page 
			</description>
		</method>
		<method name="print">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				opens 
				<m>
					print
				</m>
				dialog (Windows only) 
			</description>
		</method>
		<method name="printCapture">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				prints captured notes to the Max window 
			</description>
		</method>
		<method name="pruneTies">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				checks consistency of ties 
			</description>
		</method>
		<method name="realignMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set measure width back to original value 
				<p>
					Example: realignMeasure 0 
				</p>
			</description>
		</method>
		<method name="redo">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					redo
				</m>
				edit. Works with all transforms. Shortcut: y 
			</description>
		</method>
		<method name="removeAllRenderedMessagesFromMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				removes all rendered messages attached to specified measure 
			</description>
		</method>
		<method name="removeAllRenderedMessagesFromNote">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				removes all rendered messages attached to specified note 
				<p>
					Example: removeAllRenderedMessagesFromNote 0 0 0 0 
				</p>
			</description>
		</method>
		<method name="removeAllRenderedMessagesFromSelectedNotes">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				removes all rendered messages attached to selected notes 
			</description>
		</method>
		<method name="removeAllRenderedMessagesFromStaff">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				removes all rendered messages attached to specified measure/staff 
			</description>
		</method>
		<method name="removeGraceNotes">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				removes grace note(s) attached to selected note(s) 
			</description>
		</method>
		<method name="render">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					render
				</m>
				score starting with specified measure number 
				<p>
					Example: render 0 
				</p>
			</description>
		</method>
		<method name="resetMaxOrchestra">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				enumerate through the staves and assign a new well-ordered instrument (including its note dimensions) to each staff. 
			</description>
		</method>
		<method name="resortChords">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				reassigns the handle of the chord to the lowest pitch 
			</description>
		</method>
		<method name="restToggleTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggles between a rest and a note 
			</description>
		</method>
		<method name="saveLilyPond">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				exports score in LilyPond format 
				<p>
					Example: saveLilyPond /Users/hajdu/Desktop/untitled.ly 
				</p>
			</description>
		</method>
		<method name="saveMusicXML">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				export score in MusicXML format 
				<p>
					Example: saveMusicXML /Users/hajdu/Desktop/untitled.xml 
				</p>
			</description>
		</method>
		<method name="saveScore">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				save score in JMSL XML format 
				<p>
					Example: saveScore /Users/hajdu/Desktop/untitled.xml 
				</p>
			</description>
		</method>
		<method name="saveToUndoStack">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				save snapshot of current state to undo stack 
			</description>
		</method>
		<method name="scanForPlugins">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				scan for installed plugins and send the list out of the second outlet. Use JMSL reference for further information 
			</description>
		</method>
		<method name="select">
			<arglist>
				<arg id="0" name="measure1" type="int" optional="0" /> <arg id="1" name="staff1" type="int" optional="0" /> <arg id="2" name="track1" type="int" optional="0" /> <arg id="3" name="note1" type="int" optional="0" /> <arg id="4" name="measure2" type="int" optional="0" /> <arg id="5" name="staff2" type="int" optional="0" /> <arg id="6" name="track2" type="int" optional="0" /> <arg id="7" name="note2" type="int" optional="0" /> <arg id="8" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Select specified note range. Flag whether to extend selection through duration of second note 
				<p>
					Example: select 0 0 0 2 1 1 0 2 false 
				</p>
			</description>
		</method>
		<method name="selectAll">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Select all notes 
			</description>
		</method>
		<method name="selectAllNotesInMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select all notes in specified measure across all staves 
				<p>
					Example: selectAllNotesInMeasure 0 
				</p>
			</description>
		</method>
		<method name="selectAllNotesInMeasureStaff">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select all notes for the given measure/staff 
				<p>
					Example: selectAllNotesInMeasureStaff 1 2 
				</p>
			</description>
		</method>
		<method name="selectAllNotesInMeasureStaffTrack">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select all notes for the given measure/staff/track combo 
				<p>
					Example: selectAllNotesInMeasureStaffTrack 1 2 0 
				</p>
			</description>
		</method>
		<method name="selectAllNotesInRange">
			<arglist>
				<arg id="0" name="measure1" type="int" optional="0" /> <arg id="1" name="measure2" type="int" optional="0" /> <arg id="2" name="staff1" type="int" optional="0" /> <arg id="3" name="staff2" type="int" optional="0" /> <arg id="4" name="track1" type="int" optional="0" /> <arg id="5" name="track2" type="int" optional="0" /> <arg id="6" name="pitchClass" type="int" optional="1" /> <arg id="7" name="modulo" type="int" optional="1" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select notes for given measure/staff/track ranges. Indexes are all exclusive, i.e. fromMeasureIndex = 0 and toMeasureIndex = 1 will select first measure. The optional two items are pitchClass and modulo (usually 12 for the octave). 
				<p>
					Example: selectAllNotesInRange 0 3 0 5 0 1 7 12 
				</p>
			</description>
		</method>
		<method name="selectAllNotesInStaff">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select all notes in specified staff across all measures 
				<p>
					Example: selectAllNotesInStaff 0 
				</p>
			</description>
		</method>
		<method name="selectNextInterval">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select interval next to selected interval(s) or note (root) 
			</description>
		</method>
		<method name="selectNextNote">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select note next to selected note(s) 
			</description>
		</method>
		<method name="selectNote">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select specified note 
				<p>
					Example: selectNote 0 1 0 0 
				</p>
			</description>
		</method>
		<method name="selectPreviousInterval">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select interval or note (root) previous to selected interval(s) 
			</description>
		</method>
		<method name="selectPreviousNote">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				select note previous to selected note(s) 
			</description>
		</method>
		<method name="sequenceDump">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				entire sequence of notes in the following format out of the third outlet: instrumentIndex timeStampRelativeToStart tempo relativeDuration pitch amplitude relativeHold. relative refers to time values independent from tempo 
			</description>
		</method>
		<method name="set8va">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set ottava alta for selected notes 
				<p>
					Example: set8va true 
				</p>
			</description>
		</method>
		<method name="set8vb">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set ottava alta for selected notes 
				<p>
					Example: set8vb true 
				</p>
			</description>
		</method>
		<method name="setAccPref">
			<arglist>
				<arg id="0" name="accidentalPreference" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set accidental preference for selected note(s). Choices are: ACC_PREFER_FLAT or ACC_PREFER_SHARP 
				<p>
					Example: setAccPref ACC_PREFER_FLAT 
				</p>
			</description>
		</method>
		<method name="setAccidentalForMouseEntry">
			<arglist>
				<arg id="0" name="accidentalPreference" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				define accidental for notes entered by mouse. 0 = natural, 1 = sharp, 2 = flat 
				<p>
					Example: setAccidentalForMouseEntry 0 
				</p>
			</description>
		</method>
		<method name="setAccidentalVisibilityPolicy">
			<arglist>
				<arg id="0" name="visibilityPolicy" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set accidental visibility attributes for a selected note or interval. Possible values are: ACCIDENTAL_SHOW_NORMAL (default), ACCIDENTAL_SHOW_NEVER, ACCIDENTAL_SHOW_ALWAYS 
				<p>
					Example: setAccidentalVisibilityPolicy ACCIDENTAL_SHOW_NEVER 
				</p>
			</description>
		</method>
		<method name="setActiveTrackIndexForMouseEntry">
			<arglist>
				<arg id="0" name="track" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				defines track number for notes entered by mouse 
				<p>
					Example: setActiveTrackIndexForMouseEntry 0 
				</p>
			</description>
		</method>
		<method name="setAltEnharmonicSpelling">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set enharmonic spelling for selected note(s) 
				<p>
					Example: setAltEnharmonicSpelling true 
				</p>
			</description>
		</method>
		<method name="setAmplitude">
			<arglist>
				<arg id="0" name="amplitude" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set amplitude for selected note(s). Ranges are arbitrary and can be used for MIDI velocities 
				<p>
					Example: setAmplitude 64. 
				</p>
			</description>
		</method>
		<method name="setAutoBeam">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				turn autobeaming on/off. On by default 
				<p>
					Example: setAutoBeam true 
				</p>
			</description>
		</method>
		<method name="setBarNone">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set barline to none 
				<p>
					Example: setBarNone 0 
				</p>
			</description>
		</method>
		<method name="setBeamedOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				beam selected note(s) out. Doesn't apply to notes across measures 
				<p>
					Example: setBeamedOut true 
				</p>
			</description>
		</method>
		<method name="setClef">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="clefType" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set clef for specified measure/staff. Valid types are: TREBLE_CLEF, ALTO_CLEF, TENOR_CLEF, BASS_CLEF, PERCUSSION_CLEF 
				<p>
					Example: setClef 1 0 TREBLE_CLEF 
				</p>
			</description>
		</method>
		<method name="setComposer">
			<arglist>
				<arg id="0" name="name" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set name of composer 
				<p>
					Example: setComposer "Nick Didkovsky" 
				</p>
			</description>
		</method>
		<method name="setCopyright">
			<arglist>
				<arg id="0" name="copyright" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set copyright 
				<p>
					Example: setCopyright "© 2011" 
				</p>
			</description>
		</method>
		<method name="setCrescOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set crescendo out for selected note(s) 
				<p>
					Example: setCrescOut true 
				</p>
			</description>
		</method>
		<method name="setCurrentMeasure">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set current measure 
				<p>
					Example: setCurrentMeasure 0 
				</p>
			</description>
		</method>
		<method name="setCurrentMeasureStaffToSelectedMeasureStaff">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set current measure/staff to selected measure/staff. This command is useful when, for instance, transcription is suppose to start at a measure selected by mouse click 
			</description>
		</method>
		<method name="setCurrentStaff">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set current staff 
				<p>
					Example: setCurrentStaff 1 
				</p>
			</description>
		</method>
		<method name="setCurrentTrack">
			<arglist>
				<arg id="0" name="track" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set current track 
				<p>
					Example: setCurrentTrack 1 
				</p>
			</description>
		</method>
		<method name="setDecrescOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set decrescendo out for selected note(s) 
				<p>
					Example: setDecrescOut true 
				</p>
			</description>
		</method>
		<method name="setDoubleBar">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set barline to double 
				<p>
					Example: setDoubleBar 0 
				</p>
			</description>
		</method>
		<method name="setDuration">
			<arglist>
				<arg id="0" name="duration" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set duration for selected note(s). Quarter note = 1. 
				<p>
					Example: setDuration 0.25 
				</p>
			</description>
		</method>
		<method name="setDurationForMouseEntry">
			<arglist>
				<arg id="0" name="duration" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				defines duration for notes entered by mouse 
				<p>
					Example: setDurationForMouseEntry 1. 
				</p>
			</description>
		</method>
		<method name="setDurationalSpacingBase">
			<arglist>
				<arg id="0" name="scaling_base" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Set the "duration spacing base" of the Haken/Blostein algorithm which determines the influence of a note's duration on proportional spacing/justification. Default = 0.5 
				<p>
					Example: setDurationalSpacingBase 0.5 
				</p>
			</description>
		</method>
		<method name="setDynamic">
			<arglist>
				<arg id="0" name="dynamic" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set a dynamic for selected note(s). Valid dynamics are: DYNAMIC_NONE, DYNAMIC_PPP, DYNAMIC_PP, DYNAMIC_P, DYNAMIC_MP, DYNAMIC_MF, DYNAMIC_F, DYNAMIC_FF, DYNAMIC_FFF 
				<p>
					Example: setDynamic DYNAMIC_NONE 
				</p>
			</description>
		</method>
		<method name="setExtendedStaffLinesAbove">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="numExtendedStaffLines" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				add any number of staff lines above the five-line system 
				<p>
					Example: setExtendedStaffLinesAbove 0 0 2 
				</p>
			</description>
		</method>
		<method name="setExtendedStaffLinesBelow">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="numExtendedStaffLines" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				add any number of staff lines below the five-line system 
				<p>
					Example: setExtendedStaffLinesBelow 1 0 3 
				</p>
			</description>
		</method>
		<method name="setGlissOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set glissando out for selected note(s) 
				<p>
					Example: setGlissOut true 
				</p>
			</description>
		</method>
		<method name="setHold">
			<arglist>
				<arg id="0" name="hold" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set hold time for selected note(s) 
				<p>
					Example: setHold 0.2 
				</p>
			</description>
		</method>
		<method name="setHoldScaler">
			<arglist>
				<arg id="0" name="scaling_factor" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Whenever a note is created without a specified hold time, the scaler is used to set the hold time by multiplying by the note's duration 
				<p>
					Example: setHoldScaler 1. 
				</p>
			</description>
		</method>
		<method name="setInstrument">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> <arg id="1" name="measure" type="int" optional="0" /> <arg id="2" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Set the instrument in the orchestra whose number is instrument index to the specified measure/staff. Change all subsequent measures as well. 
				<p>
					Example: setInstrument 0 1 3 
				</p>
			</description>
		</method>
		<method name="setInstrumentDimension">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> <arg id="1" name="dimension" type="int" optional="0" /> <arg id="2" name="name" type="symbol" optional="0" /> <arg id="3" name="low" type="float" optional="0" /> <arg id="4" name="high" type="float" optional="0" /> <arg id="5" name="default" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				for a given instrument define dimensions 5 and higher (dimensions 0 thru 4 being duration, pitch, amplitude, hold and event flag). 
				<p>
					Example: setInstrumentDimension 0 5 Rate 0. 2. 1.2 
				</p>
			</description>
		</method>
		<method name="setInstrumentName">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> <arg id="1" name="name" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Name an instrument in orchestra 
				<p>
					Example: setInstrumentName 1 Trautonium 
				</p>
			</description>
		</method>
		<method name="setInstrumentTransposition">
			<arglist>
				<arg id="0" name="instrumentIndex" type="int" optional="0" /> <arg id="1" name="transposition" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Transpose an instrument by a number of semitones 
				<p>
					Example: setInstrumentTransposition 1 -12.76 
				</p>
			</description>
		</method>
		<method name="setJMSLAdvanceTime">
			<arglist>
				<arg id="0" name="timeInSeconds" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set the size of jitter-absorbing buffer 
				<p>
					Example: setJMSLAdvanceTime 0.2 
				</p>
			</description>
		</method>
		<method name="setKeySignature">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="numAccidentals" type="int" optional="0" /> <arg id="3" name="key {FLAT_KEY|SHARP_KEY" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set key signature for specified measure/staff 
				<p>
					Example: setKeySignature 0 1 4 FLAT_KEY 
				</p>
			</description>
		</method>
		<method name="setLedgerLinesVisible">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> <arg id="1" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide ledger lines for specified staff 
				<p>
					Example: setLedgerLinesVisible 0 false 
				</p>
			</description>
		</method>
		<method name="setLoopingPlayback">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				turn looping on on/off. When no section is set, the entire score will be looped 
				<p>
					Example: setLoopingPlayback true 
				</p>
			</description>
		</method>
		<method name="setMark">
			<arglist>
				<arg id="0" name="mark" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set a mark for selected note(s). Valid marks are: MARK_NONE, MARK_ACCENT, MARK_STACCATO, MARK_TENUTO, MARK_WEDGE, MARK_ACCENT_STACCATO, MARK_ACCENT_TENUTO, MARK_WEDGE_STACCATO, MARK_FERMATA, MARK_HARMONIC, MARK_TRILL, MARK_TRILL_FLAT, MARK_TRILL_SHARP, MARK_TRILL_NATURAL, MARK_MORDANT, MARK_INVERTED_MORDANT, MARK_BOWED_TREMOLO_1, MARK_BOWED_TREMOLO_2, MARK_BOWED_TREMOLO_3 
				<p>
					Example: setMark MARK_NONE 
				</p>
			</description>
		</method>
		<method name="setMeasureNumberOffset">
			<arglist>
				<arg id="0" name="offset" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set an offset to measure numbers. Default = 1 
				<p>
					Example: setMeasureNumberOffset 12 
				</p>
			</description>
		</method>
		<method name="setMeasureText">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="text" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set text for specified measure 
				<p>
					Example: setMeasureText 0 "Set Text" 
				</p>
			</description>
		</method>
		<method name="setMeasureTextLocation">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="xOffset" type="int" optional="0" /> <arg id="2" name="yOffset" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				move measure text to specified position 
				<p>
					Example: setMeasureTextLocation 0 0 -100 
				</p>
			</description>
		</method>
		<method name="setMeasureWidth">
			<arglist>
				<arg id="0" name="measure width" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set width of specified measure to width. At zoom = 1., width equals number of pixels. At zoom = 0.5, width is twice the number of pixels 
				<p>
					Example: setMeasureWidth 0 300 
				</p>
			</description>
		</method>
		<method name="setNoteDimension">
			<arglist>
				<arg id="0" name="note_dimension" type="int/symbol" optional="0" /> <arg id="1" name="value" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				for a selected note, set note dimension to specified value. Note dimension can either be referred to by name or number 
				<p>
					Example: setNoteDimension 5 0.22 
				</p>
			</description>
		</method>
		<method name="setNoteElseRestForMouseEntry">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				define whether events entered by mouse appear as rests or notes 
				<p>
					Example: setNoteElseRestForMouseEntry true 
				</p>
			</description>
		</method>
		<method name="setNoteFlash">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle note flashing during playback 
				<p>
					Example: setNoteFlash false 
				</p>
			</description>
		</method>
		<method name="setNoteVisible">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set visibility for selected note(s) 
				<p>
					Example: setNoteVisible true 
				</p>
			</description>
		</method>
		<method name="setNoteheadColor">
			<arglist>
				<arg id="0" name="RGB" type="list" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set notehead color for selected note(s) 
				<p>
					Example: setNoteheadColor 0 127 255 
				</p>
			</description>
		</method>
		<method name="setNoteheadScale">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="scale" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				change notehead size for the specified note 
				<p>
					Example: setNoteheadScale 0 0 0 0 0.67 
				</p>
			</description>
		</method>
		<method name="setNumDots">
			<arglist>
				<arg id="0" name="numDots" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set number of dots for selected note(s) 
				<p>
					Example: setNumDots 2 
				</p>
			</description>
		</method>
		<method name="setNumDotsForMouseEntry">
			<arglist>
				<arg id="0" name="numDots" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				define number of dots for notes entered by mouse 
				<p>
					Example: setNumDotsForMouseEntry 0 
				</p>
			</description>
		</method>
		<method name="setNumRepeats">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="numRepeats" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set number of repeats for specified measure 
				<p>
					Example: setNumRepeats 1 3 
				</p>
			</description>
		</method>
		<method name="setOverrideLevel">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="level" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				override the note level in terms of diatonic steps. Use this message for crossing staves. Affects anchor note only 
				<p>
					Example: setOverrideLevel 22 
				</p>
			</description>
		</method>
		<method name="setOverrideLevelFlag">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> <arg id="2" name="track" type="int" optional="0" /> <arg id="3" name="note" type="int" optional="0" /> <arg id="4" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle level overriding 
				<p>
					Example: setOverrideLevelFlag 0 0 0 0 true 
				</p>
			</description>
		</method>
		<method name="setPeriodDoubleBar">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set barline to period double 
				<p>
					Example: setPeriodDoubleBar 0 
				</p>
			</description>
		</method>
		<method name="setPitch">
			<arglist>
				<arg id="0" name="pitch" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set pitch for selected note(s) with high 
				<p>
					Example: setPitch 60.75 
				</p>
			</description>
		</method>
		<method name="setPrevBeamedOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				beam out note(s) previous to selected one(s) 
			</description>
		</method>
		<method name="setRenderAllowed">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				turn score rendering on/off 
				<p>
					Example: setRenderAllowed true 
				</p>
			</description>
		</method>
		<method name="setRenderDelay">
			<arglist>
				<arg id="0" name="timeInSeconds" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set the time in seconds by which score rendering is delayed. 
				<p>
					Example: setRenderDelay 0.1 
				</p>
			</description>
		</method>
		<method name="setRepeatEnd">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set right repeat bar-line for specified measure 
				<p>
					Example: setRepeatEnd 1 true 
				</p>
			</description>
		</method>
		<method name="setRepeatStart">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set left repeat bar-line for specified measure 
				<p>
					Example: setRepeatStart 1 true 
				</p>
			</description>
		</method>
		<method name="setReportRenderTime">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				report the time spent on rendering page 
				<p>
					Example: setReportRenderTime false 
				</p>
			</description>
		</method>
		<method name="setScoreAnnotation">
			<arglist>
				<arg id="0" name="annotation" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set score annotation string. 
				<p>
					Example: setScoreAnnotation "This is an annotation" 
				</p>
			</description>
		</method>
		<method name="setScoreBottomMargin">
			<arglist>
				<arg id="0" name="bottom-margin" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set bottom score margin in pixels. Default = 15. 
				<p>
					Example: setScoreBottomMargin 50. 
				</p>
			</description>
		</method>
		<method name="setScoreFirstSystemIndent">
			<arglist>
				<arg id="0" name="first-system-indent" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set indent of first system in pixels. Default = 0. 
				<p>
					Example: setScoreFirstSystemIndent 20. 
				</p>
			</description>
		</method>
		<method name="setScoreLeftMargin">
			<arglist>
				<arg id="0" name="left-margin" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set left score margin in pixels. Default = 20. 
				<p>
					Example: setScoreLeftMargin 50. 
				</p>
			</description>
		</method>
		<method name="setScoreRightMargin">
			<arglist>
				<arg id="0" name="right-margin" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set right score margin in pixels. Default = 20. 
				<p>
					Example: setScoreRightMargin 50. 
				</p>
			</description>
		</method>
		<method name="setScoreSize">
			<arglist>
				<arg id="0" name="width" type="int" optional="0" /> <arg id="1" name="height" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set score size to specified dimensions 
				<p>
					Example: setScoreSize 746 370 
				</p>
			</description>
		</method>
		<method name="setScoreTopMargin">
			<arglist>
				<arg id="0" name="top-margin" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set top score margin in pixels 
				<p>
					Example: setScoreTopMargin 50. Default = 15. 
				</p>
			</description>
		</method>
		<method name="setScoreTopMarginOfFirstPage">
			<arglist>
				<arg id="0" name="top-margin" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set top score margin in pixels. Default = 60. when setTitleVisible set to true 
				<p>
					Example: setScoreTopMarginOfFirstPage 50. 
				</p>
			</description>
		</method>
		<method name="setSection">
			<arglist>
				<arg id="0" name="start" type="int" optional="0" /> <arg id="1" name="end" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set section to specified measure range 
				<p>
					Example: setSection 1 2 
				</p>
			</description>
		</method>
		<method name="setSelectedNoteheadScale">
			<arglist>
				<arg id="0" name="scale" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				change notehead size for selected note(s) 
				<p>
					Example: setSelectedNoteheadScale 0.67 
				</p>
			</description>
		</method>
		<method name="setSelectedOverrideLevel">
			<arglist>
				<arg id="0" name="level" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				override the note level in terms of diatonic steps. Use this message for crossing staves. Applies both to notes and intervals 
				<p>
					Example: setOverrideLevel 22 
				</p>
			</description>
		</method>
		<method name="setSelectedOverrideLevelFlag">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle level overriding 
				<p>
					Example: setSelectedOverrideLevelFlag true 
				</p>
			</description>
		</method>
		<method name="setSelectedStaff">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set selection to given measure/staff. Same as clicking inside a measure. 
				<p>
					Example: setSelectedStaff 1 1 
				</p>
			</description>
		</method>
		<method name="setSelectionBufferNoteColor">
			<arglist>
				<arg id="0" name="red green blue" type="list" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set color of selected note(s) 
				<p>
					Example: setSelectionBufferNoteColor 255 0 0 
				</p>
			</description>
		</method>
		<method name="setSingleBar">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set barline to single 
				<p>
					Example: setSingleBar 0 
				</p>
			</description>
		</method>
		<method name="setSlurredOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set slurredOut attribute for selected note(s) 
				<p>
					Example: setSlurredOut true 
				</p>
			</description>
		</method>
		<method name="setStaffInsertionIndex">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set insertion index for given staff. Use for automate copy-and-pasting. Select staff with setSelectedStaff message first. 
				<p>
					Example: setStaffInsertionIndex 0 
				</p>
			</description>
		</method>
		<method name="setStaffLineVisible">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> <arg id="1" name="line" type="int" optional="0" /> <arg id="2" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set visibility for specified staff line. 0 = bottom line. 
				<p>
					Example: setStaffLineVisible 0 0 false 
				</p>
			</description>
		</method>
		<method name="setStaffSpacingAbove">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> <arg id="1" name="space_above" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set space above for specified staff. At zoom = 1., space_above equals number of pixels. At zoom = 0.5, space_above is twice the number of pixels 
				<p>
					Example: setStaffSpacingAbove 0 20 
				</p>
			</description>
		</method>
		<method name="setStaffSpacingBelow">
			<arglist>
				<arg id="0" name="staff" type="int" optional="0" /> <arg id="1" name="space_below" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set space below for specified staff. At zoom = 1., space_below equals number of pixels. At zoom = 0.5, space_below is twice the number of pixels 
				<p>
					Example: setStaffSpacingBelow 0 10 
				</p>
			</description>
		</method>
		<method name="setSubtitle">
			<arglist>
				<arg id="0" name="subtitle" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set subtitle for score 
				<p>
					Example: setSubtitle "a wonderful piece of music" 
				</p>
			</description>
		</method>
		<method name="setTempo">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="quarter_equals" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set tempo for specified measure. Tempo is always in reference to the duration of a quarter note 
				<p>
					Example: setTempo 0 120. 
				</p>
			</description>
		</method>
		<method name="setText">
			<arglist>
				<arg id="0" name="text" type="symbol" optional="0" /> <arg id="1" name="xOffset" type="int" optional="0" /> <arg id="2" name="yOffset" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					setText
				</m>
				for selected note(s). At zoom = 1., offset equals number of pixels. At zoom = 0.5, offset is twice the number of pixels 
				<p>
					Example: setText "this is text" 0 0 
				</p>
			</description>
		</method>
		<method name="setTextOffset">
			<arglist>
				<arg id="0" name="xOffset" type="int" optional="0" /> <arg id="1" name="yOffset" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set text position relative to selected note(s). 
				<p>
					Example: setTextOffset 67 78 
				</p>
			</description>
		</method>
		<method name="setTiedOut">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set tiedOut attribute for selected note(s) 
				<p>
					Example: setTiedOut true 
				</p>
			</description>
		</method>
		<method name="setTimeSignature">
			<arglist>
				<arg id="0" name="measure" type="int" optional="0" /> <arg id="1" name="keysig_numerator" type="int" optional="0" /> <arg id="2" name="keysig_denominator" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				for a given measure, set time signature to the values specified 
				<p>
					Example: setTimeSignature 1 6 4 
				</p>
			</description>
		</method>
		<method name="setTitle">
			<arglist>
				<arg id="0" name="title" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set title for score 
				<p>
					Example: setTitle Opus-1 
				</p>
			</description>
		</method>
		<method name="setTitleVisible">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide title, subtitle and composer as well as extra margin 
				<p>
					Example: setTitleVisible true 
				</p>
			</description>
		</method>
		<method name="setTupletForMouseEntry">
			<arglist>
				<arg id="0" name="tuplet" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				define tuplets for notes entered by mouse> Valid tuplets are 3, 5, 7, 9, 11, 13, 15, 17, 19. Use 0 if no tuplet is desired. 
				<p>
					Example: setTupletForMouseEntry 3 
				</p>
			</description>
		</method>
		<method name="setTurnPagesDuringPlayback">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle page turns during playback on/off. Default = on 
				<p>
					Example: setTurnPagesDuringPlayback true 
				</p>
			</description>
		</method>
		<method name="setUndoStackEnabled">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				suspends or engages saving to undo stack 
				<p>
					Example: setUndoStackEnabled true 
				</p>
			</description>
		</method>
		<method name="setUndoStackMemoryThresholdMB">
			<arglist>
				<arg id="0" name="memory-threshold" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The undo system stops taking snapshots if the memory is below this amount. 
				<p>
					Example: setUndoStackMemoryThresholdMB 100 
				</p>
			</description>
		</method>
		<method name="setWrap">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				when set to true, a system of staves will wrap depending on the space below the system. Default = true 
				<p>
					Example: setWrap true 
				</p>
			</description>
		</method>
		<method name="setZoom">
			<arglist>
				<arg id="0" name="zoom_factor" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				zoom out or in. Because of roundoff errors simple ratios work better than complex ones. 
				<p>
					Example: setZoom 0.5 
				</p>
			</description>
		</method>
		<method name="shiftCapturedTimeStampsToZero">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				when set to true, transcribed sequences will always start at time 0. 
				<p>
					Example: shiftCapturedTimeStampsToZero true 
				</p>
			</description>
		</method>
		<method name="showClefs">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide clefs 
				<p>
					Example: showClefs false 
				</p>
			</description>
		</method>
		<method name="showCourtesyClefs">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide courtesy clefs 
				<p>
					Example: showCourtesyClefs true 
				</p>
			</description>
		</method>
		<method name="showInstruments">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide instrument names 
				<p>
					Example: showInstruments true 
				</p>
			</description>
		</method>
		<method name="showKeySignatures">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide key signatures 
				<p>
					Example: showKeySignatures false 
				</p>
			</description>
		</method>
		<method name="showMeasureNumbers">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide measure numbers 
				<p>
					Example: showMeasureNumbers false 
				</p>
			</description>
		</method>
		<method name="showSectionBrackets">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide section brackets 
				<p>
					Example: showSectionBrackets false 
				</p>
			</description>
		</method>
		<method name="showStaffNumbers">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide staff numbers 
				<p>
					Example: showStaffNumbers false 
				</p>
			</description>
		</method>
		<method name="showTempo">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide tempo marks 
				<p>
					Example: showTempo false 
				</p>
			</description>
		</method>
		<method name="showTimeSignatures">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				show/hide time signatures 
				<p>
					Example: showTimeSignatures false 
				</p>
			</description>
		</method>
		<method name="slurTransform">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toggle slurredOut attribute for selected note(s) 
			</description>
		</method>
		<method name="start">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					start
				</m>
				playback 
			</description>
		</method>
		<method name="startCapture">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				start capturing note events 
			</description>
		</method>
		<method name="stop">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					stop
				</m>
				playback 
			</description>
		</method>
		<method name="stopCapture">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				stop capturing note events 
			</description>
		</method>
		<method name="transcribe">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				<m>
					transcribe
				</m>
				captured events. Transcriber will observe tempo and time signature markings as well as quantization set by the current list of beat division schemes, and will start transcription from current measure/staff. It is possible to repeatedly 
				<m>
					transcribe
				</m>
				during capturing. 
			</description>
		</method>
		<method name="transcribeMIDIFile">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				use transcriber to import MIDI file into 
				<o>
					MaxScore 
				</o>
				<p>
					Example: transcribeMIDIFile /Users/hajdu/Desktop/untitled.mid 
				</p>
			</description>
		</method>
		<method name="transpositionTransform">
			<arglist>
				<arg id="0" name="interval" type="float" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				transpose selected note(s) by given interval 
				<p>
					Example: transpositionTransform 9.68 
				</p>
			</description>
		</method>
		<method name="tupletTransform">
			<arglist>
				<arg id="0" name="tuplet" type="int" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				set tuplet for selected note(s). Valid tuplets are 3, 5, 7, 9, 11, 13, 15, 17, 19. 0 will remove the tuplet. 
				<p>
					Example: tupletTransform 3 
				</p>
			</description>
		</method>
		<method name="undo">
			<arglist /> 
			<digest>
				TEXT_HERE
			</digest>
			<description>
				undo. Works with all transforms. Shortcut: z 
			</description>
		</method>
		<method name="useMusicGlyphRendererProxy">
			<arglist>
				<arg id="0" name="flag" type="boolean" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				toogle glyph rendering by canvas on/off. When off, 
				<o>
					MaxScore 
				</o>
				will draw all glyphs without resorting to a font. When on, canvas will print music characters in accordance with the map provided by MaxScoreFontMap.txt 
				<p>
					Example: useMusicGlyphRendererProxy false 
				</p>
			</description>
		</method>
		<method name="writeMIDIFile">
			<arglist>
				<arg id="0" name="path" type="symbol" optional="0" /> 
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				export MIDI file 
				<p>
					Example: writeMIDIFile /Users/hajdu/Desktop/untitled.mid 
				</p>
			</description>
		</method>
	</methodlist>
<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="useNativeZoom" get="1" set="1" type="int" size="1">
			<digest>
				useNativeZoom
			</digest>
			<description>
				Enable or disable native zoom. (Default = 0)
			</description>
		</attribute>
	</attributelist>
<!--EXAMPLE-->
	<examplelist>
		<example img="com.algomusic.max.MaxScore.png" caption="MaxScore is a wrapper around an mxj object that provides standard music notation within the Max environment." /> 
	</examplelist>
<!--SEEALSO-->
	<seealsolist>
		<seealso name="maxscore.canvas" /> <seealso name="maxscore.bcanvas" /> <seealso name="jit.bcanvas" /> <seealso name="maxscore.parse" /> <seealso name="maxscore.split" /> 
	</seealsolist>
	<misc name="Output">
		<entry name="anything">
			<description>
				Out left outlet: Render messages to canvas or bcanvas. <br /> <br />
			</description>
		</entry>
		<entry name="anything">
			<description>
				Out 2nd outlet: Info messages in response to get... queries <br /> <br />
			</description>
		</entry>
		<entry name="anything">
			<description>
				Out 3rd outlet: Playback messages and sequence dump in the following formats: Playback: instrumentIndex, absTime, pitch, amplitude, hold, eventFlag, any number of instrumentDimensions Sequence dump: instrumentIndex, timeStampRelativeToStart, tempo, relativeDuration, pitch, amplitude, relativeHold, eventFlag, any number of instrumentDimensions; framed by the messages "sequenceDump start" and "sequenceDump stop". "relative" refers to time units based on quarter notes rather than absolute time values. <br /> <br />
			</description>
		</entry>
		<entry name="anything">
			<description>
				Out 4th outlet: List of transcribed notes in the format "Transcribed_Note measureIndex staffIndex trackIndex NoteIndex" <br /> <br />
			</description>
		</entry>
		<entry name="anything">
			<description>
				Out right outlet: mxj info outlet. Currently not in use.
			</description>
		</entry>
	</misc>
</c74object>
