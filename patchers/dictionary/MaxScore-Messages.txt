GlissandoTransform, note - "toggle glissando out for selected notes" GlissandoTransform;
addBeamGroup, score "timesigNum (int) timesigDenom (int) g1 (int) g2 (int) g3 (int) ..." "a BeamGroup is a specification of how to group notes in a particular time signature" "addBeamGroup 7 8 2 3 2";
addBinaryBeatDivisionScheme, transcriber "timeSpan (int) numDivisions (int)" "You can customize the beat divisions that the transcriber uses. You must add at least one binary beat division scheme to the transcriber" "addBinaryBeatDivisionScheme 1 4";
addGraceNote, note "duration (float) pitch (float) [amplitude] (float) [hold] (float) [accPrefSharp] (boolean) [beamedOut] (boolean) [slurredOut]  (boolean) [tiedOut] (boolean) [slashed] (boolean) [mark-index] (int)" "Adds a note to a score. Duration and pitch are mandatory arguments, the following ones are optional." "addGraceNote 1. 63. 0.5 1. true true true true true 2";
addInterval, note "pitch (float)" "adds an interval to a note" "addInterval 84.5";
addIntervalToSelection, select "measure (int) staff (int) track (int) note (int) interval (int)" "adds an interval to a selection" "addIntervalToSelection 1 0 0 1 3";
addMeasure, measure "timesig_numerator (int) timesig_denominator (int)" "adds a measure to a score with key signature specified" "addMeasure 5 8";
addNewMaxScoreInstrumentToOrchestra, orchestra - "adds new instrument as the last instrument in the orchestra. Its index will be orchestra size - 1" addNewMaxScoreInstrumentToOrchestra;
addNote, note "duration (float) pitch (float) amplitude (float) [hold] (float)" "add a note to a staff" "addNote 1. 60. 0.5 0.8";
addNoteToSelection, select "measure (int) staff (int) track (int) note (int) interval (int) gracenote (int) gracenoteinterval (int). Use index = -1 if not applicable" "adds a note to a selection" "addNoteToSelection 1 0 0 1 -1 0 -1";
addRenderedMessageToMeasure, measure "measure (int) xOffset (int) yOffset (int) renderedMessage (symbol)" "Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads." "addRenderedMessageToMeasure 0 0 0 \"linesegment 0 0 400 400\"";
addRenderedMessageToNote, note "measure (int) staff (int) track (int) note (int) xOffset (int) yOffset (int)  renderedMessage (symbol)" "Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads." "addRenderedMessageToNote 0 0 0 0 0 0 \"linesegment 0 0 400 400\"";
addRenderedMessageToSelectedNotes, note "xOffset (int) yOffset (int) renderedMessage (symbol)" "Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads." "addRenderedMessageToSelectedNotes 0 0 \"write that's funny\"";
addRenderedMessageToStaff, staff "measure (int) staff (int) xOffset (int) yOffset (int) renderedMessage (symbol)" "Arbitrary messages can be passed to canvas by using the addRenderedMessage family of messages. This way, graphics messages can be sent to the lcd object that canvas relies on, or to any other drawing context, for that matter. These messages will be stored in the score file and drawn when the file loads." "addRenderedMessageToStaff 0 0 0 0 \"linesegment 0 20 400 400\"";
addTupletBeatDivisionScheme, transcriber "timeSpan (int)  numDivisions (int) minRequired (int)" "You can customize the beat divisions that the transcriber uses. You must add at least one binary beat division scheme to the transcriber" "addTupletBeatDivisionScheme 1 3 2";
autoBeamTransform, note - "Autobeams selected notes. Observes beat boundaries." autoBeamTransform;
beamAcrossRestsWhenAutoBeaming, preference "flag (boolean)" "toggles beaming across rests while autobeaming on and off" "beamAcrossRestsWhenAutoBeaming true";
beamGroupTransform, note - "executes beam group transform on selected notes" beamGroupTransform;
beamTransform, note - "Autobeams selected notes. Doesn't observe beat boundaries." beamTransform;
beatDivisionSchemeListDefaultSetup, transcriber - "You can customize the beat divisions that the transcriber uses with messages such as these. Read the java docs to understand this better!!!" beatDivisionSchemeListDefaultSetup;
capture, transcriber "[timeStamp] (float) voiceIndex (int) pitch (float) amplitude (float) [hold] (float)" "capture a note for transcription. Realtime transcriber uses voiceIndex pitch amplitude. Non-realtime transcription also accepts an optional hold time" "capture 0. 0 60. 0.5 1.";
clearBeamGroups, score - "clears all beam groups from collection" clearBeamGroups;
clearBeatDivisionSchemeList, transcriber - "Clears stored beat division scheme list" clearBeatDivisionSchemeList;
clearSelection, select - "clears current selection" clearSelection;
clearUndoCache, memory - "deletes ALL files in the undo cache" clearUndoCache;
clearUndoStack, memory - "empties Undo Stack and invokes Java garbage collection" clearUndoStack;
copy, edit - "copies selected note(s). Shortcut: c" copy;
copyToAux1, edit - "copies selected note(s) to aux buffer 1" copyToAux1;
copyToAux2, edit - "copies selected note(s) to aux buffer 2" copyToAux2;
crescTransform, note - "toggles crescendo for selected notes" crescTransform;
cut, edit - "cut selected note(s). Shortcut: x" cut;
decrescTransform, note - "toggles decrescendo for selected notes" decrescTransform;
delete, edit - "deletes selected note(s). Shortcut: del" delete;
deleteMeasure, measure "[measure] (int)" "deletes selected measure or measure specified by optional argument" "deleteMeasure 5";
deleteRestsFromEmptyMeasures, score - "runs through score and deletes rests from any measures that contain only rests." deleteRestsFromEmptyMeasures;
deleteStaff, staff "[staff] (int)" "deletes selected staff or staff specified by optional argument" "deleteStaff 2";
detachGraceNotes, edit - "detaches grace notes from selected notes" detachGraceNotes;
drawAllMeasureNumbers, layout "flag (boolean)" "draw a measure number on each measure if true, else only on first measure of each line." "drawAllMeasureNumbers true";
dumpInstrumentInfo, info "instrumentIndex (int)" "Dumps instrument info out of the second outlet. Attributes are name, orchestra index, music device, mixer, name class and note dimensions; framed by startdump/enddump getInstrumentInfo" "dumpInstrumentInfo 2";
dumpOrchestra, info - "Dumps instrument info for entire orchestra out of the second outlet. Attributes are name, orchestra index, music device, mixer, name class and note dimensions; framed by startdump/enddump getInstrumentInfo" dumpOrchestra;
dumpScore, score "[startMeasure] (int) [numMeasures] (int)" "dumps entire score or, optionally, measure range given by start measure and number of measure in XML format out of the second outlet" "dumpScore 2 1";
dumpScoreAttributes, score - "dumps score attributes in XML format out of the second outlet" dumpScoreAttributes;
dumpUndoStackSizesMB, memory - "sends a list of undo stack mem info (unit is MB). First element is total mb stored in stack, followed by size of each snapshot" dumpUndoStackSizesMB;
durationTransform, note "noteDuration (symbol)" "changes note duration for selected note(s). Valid note durations are: WHOLE, HALF, QUARTER, EIGHTH, SIXTEENTH, THIRTYSECOND, SIXTYFOURTH, ONEHUNDREDTWENTYEIGHTH, TWOHUNDREDFIFTYSIXTH" "durationTransform WHOLE";
execBinaryCopyBufferTransform, plugin "pluginName (symbol)" "executes a JMSL plugin" "execBinaryCopyBufferTransform com.softsynth.jmsl.score.transforms.ZipperTransform. Refer to help file for further information";
execNotePropertiesTransform, plugin "pluginName (symbol)" "executes a JMSL plugin" "execNotePropertiesTransform com.softsynth.jmsl.score.transforms.SlurTransform. Refer to help file for further information";
execScoreOperator, plugin "pluginName (symbol)" "executes a JMSL plugin" "execBinaryCopyBufferTransform com.softsynth.jmsl.score.operators.PlaySelectedCluster. Refer to help file for further information";
execUnaryCopyBufferTransform, plugin "pluginName (symbol)" "executes a JMSL plugin" "execBinaryCopyBufferTransform com.softsynth.jmsl.score.transforms.ScrambleTransform. Refer to help file for further information";
extendHoldTimeOfLastNote, transcriber "flag (boolean)" "If set to true, the transcriber will automatically set the duration of last note to its hold time." "extendHoldTimeOfLastNote true";
fillMeasuresWithRests, score - "runs through score, deletes rests from any measures that contain ONLY rests, then fills all empty measures with rests, using default subdivisions." fillMeasuresWithRests;
fillMeasuresWithRestsFromFile, score - "just like fillMeasureWithRests but consults a simple text file the user can create that specifies how to split measures up into rests. Each line of the text file is of the format: <totalBeats>  <subgroup> <subgroup> ... <subgroup>." "fillMeasuresWithRestsFromFile \"/Users/Shared/Max 7/Library/MaxScore/maprests2meters.txt\"";
freeflowPaste, edit - "like paste but ignores original staff and measure boundaries of pasted notes" freeflowPaste;
getComposer, info "measure (int)" "returns name of composer" getComposer;
getCopyright, info "measure (int)" "returns copyright info" getCopyright;
getCurrentLocation, info - "returns measure and staff numbers for current measure" getCurrentLocation;
getDrawingAnchor, info - "returns the coordinates for measure, measure/staff or note elements. getDrawingAnchor uses up to 4 arguments: one for measure index, two for measure and staff indexes, and four for measure, staff, track and note indexes." "getDrawingAnchor 1 0 1 2";
getDurationalSpacingBase, info - "returns the \"duration spacing base\" of the Haken/Blostein algorithm which determines the influence of a note's duration on proportional spacing/justification." getDurationalSpacingBase;
getInstalledMusicFonts, info - "returns the names of the supported music fonts (Aloisen New, Jazz, Maestro, Opus) installed on the OS." getInstalledMusicFonts;
getInstrumentName, info "instrumentIndex (int)" "get name for the instrument with the given index" "getInstrumentName 1";
getInstrumentTransposition, info "instrumentIndex (int)" "returns transposition for the given instrument index" "getInstrumentTransposition 1";
getIntervalInfo, info "measure (int) staff (int) track (int) note (int) interval (int)" "dumps the attributes for the specified interval out of the second outlet in XML format" "getIntervalInfo 0 0 0 7 0";
getJMSLAdvanceTime, info - "returns advance time. Advance time is typically 0.1 sec. A little jitter-absorbing buffer." getJMSLAdvanceTime;
getJMSLLicenseType, info - "returns the JMSL license type. Currently, there are two types: LIVE and JMSL." getJMSLLicenseType;
getJMSLNow, info - "returns clocktime and advance time." getJMSLNow;
getJMSLRealTime, info - "returns current JMSL clock time." getJMSLRealTime;
getJavaFreeMemMB, info - "returns current free memory available to Java virtual machine. Initial and maximum heap sizes can be set in max.java.config.txt located in ./Cycling '74/java or /Max.app/Contents/Resources/C74/java-classes" getJavaFreeMemMB;
getLayoutShiftX, info "measure (int) staff (int) track (int) note (int)" "returns the amount by which a note is nudged to the left or right" "getLayoutShiftX 0 0 0 0";
getLeftMargin, info "measure (int)" "returns the left margin for the specified measure" "getLeftMargin 0";
getMaxGraceNoteRollbackTime, info - "traverses every note of score and accumulates the max rollback time required to  play gracenotes. Useful to set JMSL clock time advance." getMaxGraceNoteRollbackTime;
getMeasureBoundingInfo, info "measure (int)" "returns x y width height marginX for measure bounding area" "getMeasureBoundingInfo 0";
getMeasureInfo, info "measure (int)" "dumps measure info for given measure in XML format out of the second outlet" "getMeasureInfo 0";
getMeasureWidth, info "measure (int)" "returns the width for the specified measure" "getMeasureWidth 0";
getMultiTrackRestAdjustmentY, info "measure (int) staff (int) track (int)" "returns the amount by which a rest in a multitrack measure can be nudged up or down" "getMultiTrackRestAdjustmentY 0 0 0";
getNoteAnchor, info - "returns for the selected note(s) the x and y coordinates on the canvas, as well as measure, staff, track, note, interval, gracenote and gracenote interval indexes. Index = -1 of not applicable" getNoteAnchor;
getNoteAreaWidth, info "measure (int)" "returns the note area (width minus left area) for the specified measure" "getNoteAreaWidth 0";
getNoteInfo, info "measure (int) staff (int) track (int) note (int)" "dumps the attributes for the specified note out of the second outlet in XML format" "getNoteInfo 0 0 0 7";
getNoteLevel, info - "returns the note level relative to the five staff lines. Bottom line =  124" getNoteLevel;
getNotePosition, info - "returns measure, staff, track, and note index for selected note(s) or interval(s)" getNotePosition;
getNoteProperty, info "property (symbol) measure (int)  staff (int)  track (int)  note (int)  interval (int)" "Lets you query note for property without selecting it. Interval index -1 if just root or single note. Currently only 'level' property is supported." "getNoteProperty level 0 0 0 0 -1";
getNumGraceNotes, info "measure (int) staff (int) track (int) note (int) interval (int) graceNote (int) graceNoteInterval (int)" "returns number of gracenotes as the last element of the array. Returns all position indexes and number of gracenotes as the last element of the array. getNumGraceNotes without params operates on selected notes" getNumGraceNotes;
getNumInstruments, info - "returns the number of instruments in an orchestra" getNumInstruments;
getNumIntervals, info "measure (int) staff (int) track (int) note (int)" "returns the number of intervals attached to the note specified" "getNumIntervals 0 2 0 0";
getNumMeasures, info - "returns the number of measures in a score" getNumMeasures;
getNumNotes, info "measure (int) staff (int) track (int)" "returns the number of notes for a given measure-staff-track combo" "getNumNotes 0 0 1";
getNumStaves, info - "returns the number of staves in a score" getNumStaves;
getNumTracks, info - "returns the number of tracks in a score" getNumTracks;
getOrchestraSize, info - "returns number of instruments. Same as getNumInstruments" getOrchestraSize;
getRenderAllowed, info - "returns whether rendering is currently allowed or not" getRenderAllowed;
getRenderDelay, info - "returns the time in seconds by which score rendering is delayed. Default = 0." getRenderDelay;
getScoreAnnotation, info - "returns annotation string" getScoreAnnotation;
getScoreBottomMargin, info - "returns bottom score margin in pixels" getScoreBottomMargin;
getScoreFirstSystemIndent, info - "returns first system indent in pixels" getScoreFirstSystemIndent;
getScoreLeftMargin, info - "returns left score margin in pixels" getScoreLeftMargin;
getScoreRightMargin, info - "returns right score margin in pixels" getScoreRightMargin;
getScoreTopMargin, info - "returns top score margin in pixels" getScoreTopMargin;
getScoreTopMarginOfFirstPage, info - "returns top score margin in pixels when 1st measure is 0" getScoreTopMarginOfFirstPage;
getSelectedLocation, info - "returns measure and staff numbers for selected measure" getSelectedLocation;
getSelectedNoteInfo, info - "dumps the attributes for the selected note(s) and interval(s) out of the second outlet in XML format" getSelectedNoteInfo;
getSelectionBufferSize, info - "sends size of selection buffer" getSelectionBufferSize;
getStaffBoundingInfo, info "measure (int) staff (int)" "returns x y width height marginX for staff bounding area" "getStaffBoundingInfo 0 1";
getStaffInfo, info "measure (int) staff (int)" "dumps staff info for given measure/staff in XML format out of the second outlet" "getStaffInfo 0 0";
getStaffSpacing, info "staff (int)" "returns space above and below a specified staff" "getStaffSpacing 0";
getSubtitle, info "measure (int)" "returns sub title" getSubtitle;
getTimeSignature, info "measure (int)" "returns the time signature for the specified measure" "getTimeSignature 45";
getTitle, info "measure (int)" "returns title" getTitle;
getUndoStackMemoryThresholdMB, info "undo-stack-memory-threshold (int)" "returns the current threshold in MB" getUndoStackMemoryThresholdMB;
getZoom, info - "returns current zoom level" getZoom;
handleMusicCurveRendering, layout "flag (boolean)" "toggles curve handling by canvas on/off. Curves (ties, slurs), lines (wedges, barlines, staff lines and ledger lines) and dots can either by handled by the the MaxScore object or by canvas. The latter allows more control over positioning and shape." "handleMusicCurveRendering true";
highlightSelectedStaff, preference "flag (boolean)" "toggles highlighting for selected staff on/off" "highlightSelectedStaff true";
insertMeasure, measure "[measure] (int)" "insert a measure before selected measure or measure specified by optional argument" "insertMeasure 5";
insertNote, note "measure (int) staff (int) track (int) note (int) duration (int) pitch (int) amplitude (int) hold (int)" "insert a note at given position" "insertNote 0 0 0 0 0.5 0. 70. 0.";
insertStaff, staff "[staff] (int)" "insert a staff before selected staff or staff specified by optional argument" "insertStaff 3";
isChord, info "measure (int) staff (int) track (int) note (int) [interval (int), graceNote (int) graceNoteInterval (int)]" "returns whether the specified note has intervals and its number of intervals. Use index = -1 if not applicable. isChord without parameters operates on selected notes" "isChord 0 0 0 7 -1 -1 -1";
isLegacyMultiTrackOrientation, info - "returns whether useLegacyMultiTrackOrientation is set to false or true" isLegacyMultiTrackOrientation;
loadBeamGroups, score "path (symbol)" "loads a text file that contains beam groups defined by the user" "loadBeamGroups \"/Users/Shared/Max 7/Library/MaxScore/userbeamgroup.txt\"";
loadScore, score "path (symbol) [flag] (boolean)" "load a score. The optional second argument specifies whether the score will be drawn right away or only after a \"setRenderAllowed true\" message" "loadScore /Users/hajdu/Desktop/untitled.xml false";
lyricLevelTransform, note - "sets y coordinates of the text attached to selected note(s) to 60 - \"lyric level\"" lyricLevelTransform;
newScore, score "numStaves (int) width (int) height (int)" "create new score with specified width and height values. If 3 arguments: number of staves, width and height, if 4 arguments and 4th arg != int: number of staves, width, height, and isRenderAllowed flag, if 4 arguments and 4th arg = int: number of staves, number of tracks, width and height, if 5 arguments: number of staves, number of tracks, width height and isRenderAllowed flag, if 6 arguments: number of staves, number of tracks, width height, isRenderAllowed flag and isUndoStackEnabled flag" "newScore 2 320 240 or newScore 1 4 400 480 true true";
nextPage, navigation - "draws next page" nextPage;
noteStemVisibilityTransform, note "flag (boolean)" "toggles stem visibility off/on" "noteStemVisibilityTransform true";
noteheadTransform, note "noteheadType (symbol)" "choose a notehead type for selected note(s). Valid notehead types are: NOTEHEAD_STANDARD, NOTEHEAD_X, NOTEHEAD_DIAMOND, NOTEHEAD_TRIANGLE, NOTEHEAD_INVERTED_TRIANGLE, NOTEHEAD_X_DIAMOND, NOTEHEAD_SLASH" "noteheadTransform NOTEHEAD_STANDARD";
noteheadVisibilityTransform, note - "toggles notehead visibility on/off" "noteheadVisibilityTransform true";
notifySelectionBuffer, select "flag (boolean)" "If set to true, notifySelectionBuffer will automatically return selected location and note position whenever user selects notes." "notifySelectionBuffer true";
openWindow, interaction - "opens canvas window" openWindow;
ottavaAltaTransform, note - "toggle ottava alta for selected notes" ottavaAltaTransform;
ottavaBassaTransform, note - "toggle ottava bassa for selected notes" ottavaBassaTransform;
overrideStemDirection, note "direction (symbol)" "lets user override layout manager's opinion of stem direction of notes in selection buffer. Possible values are UP, DOWN and CLEAR. CLEAR returns control to layout manager" "overrideStemDirection DOWN";
paste, edit - "paste note(s) at selected position. Shortcut: v" paste;
pasteAsGraceNotes, edit - "paste whatever is in the copy buffer as grace note(s) to selected note" pasteAsGraceNotes;
playSection, playback - "play section specified by setSection" playSection;
previousPage, navigation - "draw previous page" previousPage;
print, layout - "opens print dialog (Windows only)" print;
printCapture, transcriber - "prints captured notes to the Max window" printCapture;
pruneTies, layout - "checks consistency of ties" pruneTies;
realignMeasure, layout "measure (int)" "set measure width back to original value" "realignMeasure 0";
redo, edit - "redo edit. Works with all transforms. Shortcut: y" redo;
removeAllRenderedMessagesFromMeasure, measure "measure (int)" "removes all rendered messages attached to specified measure" "removeAllRenderedMessagesFromMeasure 0";
removeAllRenderedMessagesFromNote, note "measure (int) staff (int) track (int) note (int)" "removes all rendered messages attached to specified note" "removeAllRenderedMessagesFromNote 0 0 0 0";
removeAllRenderedMessagesFromSelectedNotes, note - "removes all rendered messages attached to selected notes" removeAllRenderedMessagesFromSelectedNotes;
removeAllRenderedMessagesFromStaff, staff "measure (int) staff (int)" "removes all rendered messages attached to specified measure/staff" "removeAllRenderedMessagesFromStaff 0 0";
removeGraceNotes, note - "removes grace note(s) attached to selected note(s)" removeGraceNotes;
render, layout "measure (int)" "render score starting with specified measure number" "render 0";
resetMaxOrchestra, orchestra - "enumerate through the staves and assign a new well-ordered instrument (including its note dimensions) to each staff." resetMaxOrchestra;
resetMeasureLeftMargin, layout "measure (int)" "reset left margin of specified measure to default value" "resetMeasureLeftMargin 0";
resortChords, note - "reassigns the handle of the chord to the lowest pitch" resortChords;
restToggleTransform, note - "toggles between a rest and a note" restToggleTransform;
saveBeamGroups, score "path (symbol)" "saves a text file containing beam groups defined by the user" "saveBeamGroups \"/Users/Shared/Max 7/Library/MaxScore/userbeamgroup.txt\"";
saveLilyPond, file "path (symbol)" "exports score in LilyPond format" "saveLilyPond /Users/hajdu/Desktop/untitled.ly";
saveMusicXML, file "path (symbol)" "export score in MusicXML format" "saveMusicXML /Users/hajdu/Desktop/untitled.xml";
saveScore, file "path (symbol)" "save score in JMSL XML format" "saveScore /Users/hajdu/Desktop/untitled.xml";
saveToUndoStack, edit - "save snapshot of current state to undo stack" saveToUndoStack;
scanForPlugins, plugin - "scan for installed plugins and send the list out of the second outlet. Use JMSL reference for further information" scanForPlugins;
select, select "measure1 (int) staff1 (int) track1 (int) note1 (int) measure2 (int) staff2 (int) track2 (int) note2 (int) flag (boolean)" "Select specified note range. Flag whether to extend selection through duration of second note" "select 0 0 0 2 1 1 0 2 false";
selectAll, select - "Select all notes" selectAll;
selectAllNotesInMeasure, select "measure (int)" "select all notes in specified measure across all staves" "selectAllNotesInMeasure 0";
selectAllNotesInMeasureStaff, select "measure (int) staff (int)" "select all notes for the given measure/staff" "selectAllNotesInMeasureStaff 1 2";
selectAllNotesInMeasureStaffTrack, select "measure (int) staff (int) track (int)" "select all notes for the given measure/staff/track combo" "selectAllNotesInMeasureStaffTrack 1 2 0";
selectAllNotesInRange, select "measure1 (int) measure2 (int) staff1 (int) staff2 (int) track1 (int) track2 (int) [pitchClass]  (int) [modulo] (int)" "select notes for given measure/staff/track ranges. Indexes are all exclusive, i.e. fromMeasureIndex = 0 and toMeasureIndex = 1 will select first measure. The optional two items are pitchClass and modulo (usually 12 for the octave)." "selectAllNotesInRange 0 3 0 5 0 1 7 12";
selectAllNotesInStaff, select "staff (int)" "select all notes in specified staff across all measures" "selectAllNotesInStaff 0";
selectNextInterval, select - "select interval next to selected interval(s) or note (root)" selectNextInterval;
selectNextNote, select - "select note next to selected note(s)" selectNextNote;
selectNote, select "measure (int) staff (int) track (int) note (int)" "select specified note" "selectNote 0 1 0 0";
selectPreviousInterval, select - "select interval or note (root) previous to selected interval(s)" selectPreviousInterval;
selectPreviousNote, select - "select note previous to selected note(s)" selectPreviousNote;
sequenceDump, playback - "dump entire sequence of notes in the following format out of the third outlet: instrumentIndex timeStampRelativeToStart tempo relativeDuration pitch amplitude relativeHold. relative refers to time values independent from tempo" sequenceDump;
set8va, note "flag (boolean)" "set ottava alta for selected notes" "set8va true";
set8vb, note "flag (boolean)" "set ottava alta for selected notes" "set8vb true";
setAccPref, note "accidentalPreference (symbol)" "set accidental preference for selected note(s). Choices are: ACC_PREFER_FLAT or ACC_PREFER_SHARP" "setAccPref ACC_PREFER_FLAT";
setAccidentalForMouseEntry, preference "accidentalPreference (int)" "define accidental for notes entered by mouse. 0 = natural, 1 = sharp, 2 = flat" "setAccidentalForMouseEntry 0";
setAccidentalVisibilityPolicy, note "visibilityPolicy (symbol)" "set accidental visibility attributes for a selected note or interval. Possible values are: ACCIDENTAL_SHOW_NORMAL (default), ACCIDENTAL_SHOW_NEVER, ACCIDENTAL_SHOW_ALWAYS" "setAccidentalVisibilityPolicy ACCIDENTAL_SHOW_NEVER";
setActiveTrackIndexForMouseEntry, preference "track (int)" "defines track number for notes entered by mouse" "setActiveTrackIndexForMouseEntry 0";
setAltEnharmonicSpelling, note "flag (boolean)" "set enharmonic spelling for selected note(s)" "setAltEnharmonicSpelling true";
setAmplitude, note "amplitude (float)" "set amplitude for selected note(s). Ranges are arbitrary and can be used for MIDI velocities" "setAmplitude 64.";
setAutoAddMeasure, preference "flag (boolean)" "when true, adds an empty measure to a score if notes are added or pasted into the very last measure. True is default behavior" "setAutoAddMeasure false";
setAutoBeam, preference "flag (boolean)" "turn autobeaming on/off. On by default" "setAutoBeam true";
setBarNone, measure "measure (int)" "set barline to none" "setBarNone 0";
setBeamedOut, note "flag (boolean)" "beam selected note(s) out. Doesn't apply to notes across measures" "setBeamedOut true";
setClef, staff "measure (int) staff (int) clefType (symbol)" "set clef for specified measure/staff. Valid types are: TREBLE_CLEF, ALTO_CLEF, TENOR_CLEF, BASS_CLEF, PERCUSSION_CLEF" "setClef 1 0 TREBLE_CLEF";
setComposer, score "name (symbol)" "set name of composer" "setComposer \"Nick Didkovsky\"";
setCopyright, score "copyright (symbol)" "set copyright" "setCopyright \"© 2011\"";
setCrescOut, note "flag (boolean)" "set crescendo out for selected note(s)" "setCrescOut true";
setCurrentMeasure, interaction "measure (int)" "set current measure" "setCurrentMeasure 0";
setCurrentMeasureStaffToSelectedMeasureStaff, interaction - "set current measure/staff to selected measure/staff. This command is useful when, for instance, transcription is suppose to start at a measure selected by mouse click" setCurrentMeasureStaffToSelectedMeasureStaff;
setCurrentStaff, interaction "staff (int)" "set current staff " "setCurrentStaff 1";
setCurrentTrack, interaction "track (int)" "set current track" "setCurrentTrack 1";
setDecrescOut, note "flag (boolean)" "set decrescendo out for selected note(s)" "setDecrescOut true";
setDoubleBar, measure "measure (int)" "set barline to double" "setDoubleBar 0";
setDuration, note "duration (float)" "set duration for selected note(s). Quarter note = 1." "setDuration 0.25";
setDurationForMouseEntry, preference "duration (float)" "defines duration for notes entered by mouse" "setDurationForMouseEntry 1.";
setDurationalSpacingBase, preference "scaling_base (float)" "Set the \"duration spacing base\" of the Haken/Blostein algorithm which determines the influence of a note's duration on proportional spacing/justification. Range: 0. - 1., default = 0.7" "setDurationalSpacingBase 0.5";
setDynamic, note "dynamic (symbol)" "set a dynamic for selected note(s). Valid dynamics are: DYNAMIC_NONE, DYNAMIC_PPP, DYNAMIC_PP, DYNAMIC_P, DYNAMIC_MP, DYNAMIC_MF, DYNAMIC_F, DYNAMIC_FF, DYNAMIC_FFF" "setDynamic DYNAMIC_NONE";
setExtendedStaffLinesAbove, staff "measure (int) staff (int) numExtendedStaffLines (int)" "add any number of staff lines above the five-line system" "setExtendedStaffLinesAbove 0 0 2";
setExtendedStaffLinesBelow, staff "measure (int) staff (int) numExtendedStaffLines (int)" "add any number of staff lines below the five-line system" "setExtendedStaffLinesBelow 1 0 3";
setGlissOut, note "flag (boolean)" "set glissando out for selected note(s)" "setGlissOut true";
setGraceNoteSeparationScaler, note "measure (int) staff (int) trackIndex (int) note (int) graceNoteSeparationScaler (float)" "set grace note spacing on a per note basis. Default is 2." "setGraceNoteSeparationScaler 0 0 0 0 1.";
setHold, note "hold (float)" "set hold time for selected note(s)" "setHold 0.2";
setHoldScaler, preference "scaling_factor (float)" "Whenever a note is created without a specified hold time, the scaler is used to set the hold time by multiplying by the note's duration" "setHoldScaler 1.";
setInstrument, orchestra "instrumentIndex (int) measure (int) staff (int)" "Set the instrument in the orchestra whose number is instrument index to the specified measure/staff. Change all subsequent measures as well." "setInstrument 0 1 3";
setInstrumentDimension, orchestra "instrumentIndex (int) dimension (int) name (symbol) low (float) high (float) default (float)" "for a given instrument define dimensions 5 and higher (dimensions 0 thru 4 being duration, pitch, amplitude, hold and event flag)." "setInstrumentDimension 0 5 Rate 0. 2. 1.2";
setInstrumentName, orchestra "instrumentIndex (int) name (symbol)" "Name an instrument in orchestra " "setInstrumentName 1 Trautonium";
setInstrumentTransposition, orchestra "instrumentIndex (int) transposition (float)" "Transpose an instrument by a number of semitones" "setInstrumentTransposition 1 -12.76";
setJMSLAdvanceTime, playback "timeInSeconds (float)" "set the size of jitter-absorbing buffer" "setJMSLAdvanceTime 0.2";
setKeySignature, staff "measure (int) staff (int) numAccidentals (int) \"key {FLAT_KEY|SHARP_KEY\" (symbol)" "set key signature for specified measure/staff" "setKeySignature 0 1 4 FLAT_KEY";
setLayoutShiftX, note "layoutShiftX (float) or measure (int) staff (int) track (int) note (int) layoutShiftX (float)" "layout shift X allows users to nudge a note left or right. With just one argument given, the messages operates on selection buffer" "setLayoutShiftX 20 or setLayoutShiftX 0 0 0 0 20";
setLedgerLinesVisible, preference "staff (int) flag (boolean)" "show/hide ledger lines for specified staff" "setLedgerLinesVisible 0 false";
setLoopingPlayback, playback "flag (boolean)" "turn looping on on/off. When no section is set, the entire score will be looped" "setLoopingPlayback true";
setMark, note "mark (symbol)" "set a mark for selected note(s). Valid marks are: MARK_NONE, MARK_ACCENT, MARK_STACCATO, MARK_TENUTO, MARK_WEDGE, MARK_ACCENT_STACCATO, MARK_ACCENT_TENUTO, MARK_WEDGE_STACCATO, MARK_FERMATA, MARK_HARMONIC, MARK_TRILL, MARK_TRILL_FLAT, MARK_TRILL_SHARP, MARK_TRILL_NATURAL, MARK_MORDANT, MARK_INVERTED_MORDANT, MARK_BOWED_TREMOLO_1, MARK_BOWED_TREMOLO_2, MARK_BOWED_TREMOLO_3, MARK_BREATH_MARK_COMMA, MARK_INVERTED_FERMATA" "setMark MARK_NONE";
setMeasureLeftMargin, measure "measure (int) leftMagin (float)" "sets the left margin of the specified measure to given value. Useful for proportional notation" "setMeasureLeftMargin 0 50.";
setMeasureNumberOffset, preference "offset (int)" "set an offset to measure numbers. Default = 1" "setMeasureNumberOffset 12";
setMeasureText, measure "measure (int) text (symbol)" "set text for specified measure" "setMeasureText 0 \"Set Text\"";
setMeasureTextLocation, measure "measure (int) xOffset (int) yOffset (int)" "move measure text to specified position" "setMeasureTextLocation 0 0 -100";
setMeasureWidth, measure "\"measure width\"  (int)" "set width of specified measure to width. At zoom = 1., width equals number of pixels. At zoom = 0.5, width is twice the number of pixels" "setMeasureWidth 0 300";
setMultiTrackRestAdjustmentY, track "measure (int) staff (int) track (int) offsetY (float)" "nudge rests in multitrack measures up or down from the programmatically determined Y position" "setMultiTrackRestAdjustmentY 0 0 0 5.";
setNoteDimension, note "note_dimension (int/symbol) value (float)" "for a selected note, set note dimension to specified value. Note dimension can either be referred to by name or number" "setNoteDimension 5 0.22";
setNoteElseRestForMouseEntry, preference "flag (boolean)" "define whether events entered by mouse appear as rests or notes" "setNoteElseRestForMouseEntry true";
setNoteFlash, preference "flag (boolean)" "toggle note flashing during playback" "setNoteFlash false";
setNoteLedgerLinesVisible, note "measure (int) staff (int) track (int) note (int) flag (boolean)" "set visibility of ledger lines for selected note(s)" "setNoteLedgerLinesVisible 0 0 0 0 true";
setNoteVisible, note "flag (boolean)" "set visibility for selected note(s)" "setNoteVisible true";
setNoteheadColor, note "RGB (list)" "set notehead color for selected note(s)" "setNoteheadColor 0 127 255";
setNoteheadScale, note "measure (int) staff (int) track (int) note (int) scale (float)" "change notehead size for the specified note" "setNoteheadScale 0 0 0 0 0.67";
setNumDots, note "numDots (int)" "set number of dots for selected note(s)" "setNumDots 2";
setNumDotsForMouseEntry, preference "numDots (int)" "define number of dots for notes entered by mouse" "setNumDotsForMouseEntry 0";
setNumRepeats, measure "measure (int) numRepeats (int)" "set number of repeats for specified measure" "setNumRepeats 1 3";
setOverrideLevel, note "measure (int) staff (int) track (int) note (int) level (int)" "override the note level in terms of diatonic steps. Use this message for crossing staves. Affects anchor note only" "setOverrideLevel 0 0 0 0 22";
setOverrideLevelFlag, note "measure (int) staff (int) track (int) note (int) flag (boolean)" "toggle level overriding" "setOverrideLevelFlag 0 0 0 0 true";
setPeriodDoubleBar, measure "measure (int)" "set barline to period double" "setPeriodDoubleBar 0";
setPitch, note "pitch (float)" "set pitch for selected note(s) with high precision" "setPitch 60.75";
setPrevBeamedOut, note "flag (boolean)" "beam out note(s) previous to selected one(s) " setPrevBeamedOut;
setReceivePlayheadPosition, preference "flag (boolean)" "toggle the display of the playhead during playback" "setReceivePlayheadPosition false";
setRenderAllowed, layout "flag (boolean)" "turn score rendering on/off" "setRenderAllowed true";
setRenderDelay, playback "timeInSeconds (float)" "set the time in seconds by which score rendering is delayed." "setRenderDelay 0.1";
setRepeatEnd, measure "measure (int) flag (boolean)" "set right repeat bar-line for specified measure" "setRepeatEnd 1 true";
setRepeatStart, measure "measure (int) flag (boolean)" "set left repeat bar-line for specified measure" "setRepeatStart 1 true";
setReportRenderTime, preference - "report the time spent on rendering page" "setReportRenderTime false";
setScoreAnnotation, score "annotation (symbol)" "set score annotation string." "setScoreAnnotation \"This is an annotation\"";
setScoreBottomMargin, layout "bottom-margin (float)" "set bottom score margin in pixels. Default = 15." "setScoreBottomMargin 50.";
setScoreFirstSystemIndent, layout "first-system-indent (float)" "set indent of first system in pixels. Default = 0." "setScoreFirstSystemIndent 20.";
setScoreLeftMargin, layout "left-margin (float)" "set left score margin in pixels. Default = 20." "setScoreLeftMargin 50.";
setScoreRightMargin, layout "right-margin (float)" "set right score margin in pixels. Default = 20." "setScoreRightMargin 50.";
setScoreSize, layout "width (int) height (int)" "set score size to specified dimensions" "setScoreSize 746 370";
setScoreTopMargin, layout "top-margin (float)" "set top score margin in pixels" "setScoreTopMargin 50. Default = 15.";
setScoreTopMarginOfFirstPage, layout "top-margin (float)" "set top score margin in pixels. Default = 60. when setTitleVisible set to true" "setScoreTopMarginOfFirstPage 50.";
setSection, playback "start (int) end (int)" "set section to specified measure range" "setSection 1 2";
setSelectedGraceNoteSeparationScaler, note "graceNoteSeparationScaler (float)" "set grace note spacing on a per note basis. Default is 2." "setGraceNoteSeparationScaler 0 0 0 0 1.";
setSelectedNoteLedgerLinesVisible, note "flag (boolean)" "set visibility of ledger lines for specified note" "setSelectedNoteLedgerLinesVisible true";
setSelectedNoteheadScale, note "scale (float)" "change notehead size for selected note(s)" "setSelectedNoteheadScale 0.67";
setSelectedOverrideLevel, note "level (int)" "override the note level in terms of diatonic steps. Use this message for crossing staves. Applies both to notes and intervals" "setSelectedOverrideLevel 22";
setSelectedOverrideLevelFlag, note "flag (boolean)" "toggle level overriding" "setSelectedOverrideLevelFlag true";
setSelectedStaff, interaction "measure (int) staff (int)" "set selection to given measure/staff. Same as clicking inside a measure." "setSelectedStaff 1 1";
setSelectionBufferNoteColor, preference "\"red green blue\" (list)" "set color of selected note(s) " "setSelectionBufferNoteColor 255 0 0";
setSingleBar, measure "measure (int)" "set barline to single" "setSingleBar 0";
setSlurredOut, note "flag (boolean)" "set slurredOut attribute for selected note(s)" "setSlurredOut true";
setStaffInsertionIndex, select "staff (int)" "set insertion index for given staff. Use for automate copy-and-pasting. Select staff with setSelectedStaff message first." "setStaffInsertionIndex 0";
setStaffLineVisible, preference "staff (int) line (int) flag (boolean)" "set visibility for specified staff line. 0 = bottom line." "setStaffLineVisible 0 0 false";
setStaffSpacingAbove, layout "staff (int) space_above (int)" "set space above for specified staff. At zoom = 1., space_above equals number of pixels. At zoom = 0.5, space_above is twice the number of pixels" "setStaffSpacingAbove 0 20";
setStaffSpacingBelow, layout "staff (int) space_below (int)" "set space below for specified staff. At zoom = 1., space_below equals number of pixels. At zoom = 0.5, space_below is twice the number of pixels" "setStaffSpacingBelow 0 10";
setSubtitle, score "subtitle (symbol)" "set subtitle for score" "setSubtitle \"a wonderful piece of music\"";
setTempo, measure "measure (int) quarter_equals (float)" "set tempo for specified measure. Tempo is always in reference to the duration of a quarter note" "setTempo 0 120.";
setText, note "text (symbol) xOffset (int) yOffset (int)" "setText for selected note(s). At zoom = 1., offset equals number of pixels. At zoom = 0.5, offset is twice the number of pixels" "setText \"this is text\" 0 0";
setTextOffset, note "xOffset (int) yOffset (int)" "set text position relative to selected note(s)." "setTextOffset 67 78";
setTiedOut, note "flag (boolean)" "set tiedOut attribute for selected note(s)" "setTiedOut true";
setTimeSignature, measure "measure (int) keysig_numerator (int) keysig_denominator (int)" "for a given measure, set time signature to the values specified" "setTimeSignature 1 6 4";
setTitle, score "title (symbol)" "set title for score" "setTitle Opus-1";
setTitleVisible, preference "flag (boolean)" "show/hide title, subtitle and composer as well as extra margin" "setTitleVisible true";
setTupletForMouseEntry, preference "tuplet (int)" "define tuplets for notes entered by mouse> Valid tuplets are 3, 5, 7, 9, 11, 13, 15, 17, 19. Use 0 if no tuplet is desired." "setTupletForMouseEntry 3";
setTurnPagesDuringPlayback, preference "flag (boolean)" "toggle page turns during playback on/off. Default = on" "setTurnPagesDuringPlayback true";
setUndoStackEnabled, preference "flag (boolean)" "suspends or engages saving to undo stack" "setUndoStackEnabled true";
setUndoStackMemoryThresholdMB, preference "memory-threshold (int)" "The undo system stops taking snapshots if the memory is below this amount." "setUndoStackMemoryThresholdMB 100";
setWrap, preference "flag (boolean)" "when set to true, a system of staves will wrap depending on the space below the system. Default = true" "setWrap true";
setZoom, layout "zoom_factor (float)" "zoom out or in. Because of roundoff errors simple ratios work better than complex ones." "setZoom 0.5";
shiftCapturedTimeStampsToZero, transcriber "flag (boolean)" "when set to true, transcribed sequences will always start at time 0." "shiftCapturedTimeStampsToZero true";
showClefs, staff "flag (boolean)" "show/hide clefs" "showClefs false";
showCourtesyClefs, preference "flag (boolean)" "show/hide courtesy clefs" "showCourtesyClefs true";
showInstruments, preference "flag (boolean)" "show/hide instrument names" "showInstruments true";
showKeySignatures, preference "flag (boolean)" "show/hide key signatures" "showKeySignatures false";
showMeasureNumbers, preference "flag (boolean)" "show/hide measure numbers" "showMeasureNumbers false";
showSectionBrackets, preference "flag (boolean)" "show/hide section brackets" "showSectionBrackets false";
showStaffNumbers, preference "flag (boolean)" "show/hide staff numbers" "showStaffNumbers false";
showTempo, preference "flag (boolean)" "show/hide tempo marks" "showTempo false";
showTimeSignatures, preference "flag (boolean)" "show/hide time signatures" "showTimeSignatures false";
slurTransform, note - "toggle slurredOut attribute for selected note(s)" slurTransform;
start, playback - "start playback" start;
startCapture, transcriber - "start capturing note events" startCapture;
stop, playback - "stop playback" stop;
stopCapture, transcriber - "stop capturing note events" stopCapture;
transcribe, transcriber - "transcribe captured events. Transcriber will observe tempo and time signature markings as well as quantization set by the current list of beat division schemes, and will start transcription from current measure/staff. It is possible to repeatedly transcribe during capturing." transcribe;
transcribeMIDIFile, file "path (symbol)" "use transcriber to import MIDI file into MaxScore" "transcribeMIDIFile /Users/hajdu/Desktop/untitled.mid";
transposeGraceNotesOnlyTransform, note "interval (float)" "transpose only gracenote(s) for the selected note by given interval" "transposeGraceNotesOnlyTransform 9.68";
transposeGraceNotesTransform, note "interval (float)" "transpose selected note(s) and their gracenote(s) by given interval" "transposeGraceNotesTransform 9.68";
transpositionTransform, note "interval (float)" "transpose selected note(s) but not their gracenote(s) by given interval" "transpositionTransform 9.68";
tupletTransform, note "tuplet (int)" "set tuplet for selected note(s). Valid tuplets are 3, 5, 7, 9, 11, 13, 15, 17, 19. 0 will remove the tuplet." "tupletTransform 3";
undo, edit - "undo.  Works with all transforms. Shortcut: z" undo;
useLegacyMultiTrackOrientation, preference "flag (boolean)" "legacy treats tracks 0..numTracks/2 as the 'bottom' of the staff, stems down, and track numTracks/2..numTracks as 'top' of staff, stems up new, non-legacy orientation alternates even, odd, so tracks 0,2,4... are 'bottom' stem down, and tracks 1, 3, 5.. are 'top', stem up" "useLegacyMultiTrackOrientation true";
useMusicGlyphRendererProxy, layout "flag (boolean)" "toogle glyph rendering by canvas on/off. When off, MaxScore will draw all glyphs without resorting to a font. When on, canvas will print music characters in accordance with the map provided by MaxScoreFontMap.txt" "useMusicGlyphRendererProxy false";
useNativeZoom, preference "flag (boolean)" "when set to true, the setZoom message will be passed unaltered to the canvas abstraction where a scale transform will be applied to the score. Otherwise, the MaxScore object will be instructed to calculate render messages according to the current setZoom value (default). It is recommeded that users of MaxScore 1.0 and higher should set the useNativeZoom attribute manually" "useNativeZoom true";
writeMIDIFile, file "path (symbol)" "export MIDI file" "writeMIDIFile /Users/hajdu/Desktop/untitled.mid";
